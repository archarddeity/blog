name: Build and Deploy Retro Blog

on:
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes (less aggressive)
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    env:
      TENOR_API_KEY: ${{ secrets.TENOR_API_KEY }}
      NOTION_SHARED_SECRET: ${{ secrets.NOTION_SHARED_SECRET }}
      NOTION_HASH: ${{ secrets.NOTION_HASH }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Pinned version for consistency
          cache: 'pip'  # Enable caching

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate and build content
        run: |
          python update_message.py || exit 1
          python build.py || exit 1

      - name: Validate HTML
        uses: actions/github-script@v6
        with:
          script: |
            const html = require('fs').readFileSync('index.html', 'utf8');
            if (!html.includes('{{content}}')) {
              console.log('HTML validation passed');
            } else {
              throw new Error('Template tags not replaced in HTML');
            }

      - name: Commit and push changes
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          
          # Only commit if there are changes
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M:%S')"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: |
            index.html
            style.css
            assets/  # Include any other necessary files

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2