name: Build and Deploy Retro Blog

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  push:
    paths:
      - "message.txt"
      - "template.html"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    env:
      TENOR_API_KEY: ${{ secrets.TENOR_API_KEY }}
      NOTION_SHARED_SECRET: ${{ secrets.NOTION_SHARED_SECRET }}
      NOTION_HASH: ${{ secrets.NOTION_HASH }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # üîÅ New step: Auto-generate new message.txt every 5 minutes
      - name: Generate new message.txt
        run: python update_message.py

      # ‚úÖ Commit and push updated message.txt using PAT
      - name: Commit and push message.txt
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git pull --rebase
          git add message.txt
          git commit -m "Auto: New message.txt from scheduler" || echo "No message.txt changes"
          git push || echo "No changes pushed"

      # Run build script
      - name: Run build script
        run: python build.py

      - name: Commit and push index.html
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git pull --rebase
          git add index.html
          git commit -m "Auto: Update index.html from message.txt" || echo "No index.html changes"
          git push || echo "No changes pushed"

      - name: Upload site files as artifact (v4)
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: |
            index.html
            style.css

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4