name: Build and Deploy Retro Blog

on:
  push:
    paths:
      - "message.txt"
      - "template.html"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    env:
      TENOR_API_KEY: ${{ secrets.TENOR_API_KEY }}
      NOTION_SHARED_SECRET: ${{ secrets.NOTION_SHARED_SECRET }}
      NOTION_HASH: ${{ secrets.NOTION_HASH }}
      NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
      NOTION_PAGE_ID: ${{ secrets.NOTION_PAGE_ID }}
    
    steps:
      # Checkout repo - Only necessary to get the latest template.html
      - name: Checkout repo
        uses: actions/checkout@v3
      # Output: Successfully checked out the repository.

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      # Output: Python 3.x environment set up successfully.

      # Install dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # Output: Successfully installed dependencies: requests, pytz, dotenv...

      # Run build script
      - name: Run build script
        run: python build.py
      # Output: 
      # ✅ Notion content verified and saved to message.txt
      # ✅ index.html updated!

      # Commit and push changes
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add index.html
          git commit -m "Auto: Update index.html from message.txt" || echo "No changes to commit"
          git push
      # Output: Successfully committed and pushed index.html to the repository.

      # Upload site files as artifact
      - name: Upload site files as artifact (v4)
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: |
            index.html
            style.css  # Add other needed files here
      # Output: Successfully uploaded artifact: github-pages (index.html, style.css).

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      # Output: Successfully deployed to GitHub Pages.
      # View the deployed site here: https://username.github.io/repo-name/
