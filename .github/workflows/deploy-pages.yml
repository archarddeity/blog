name: AI Automation

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    env:
      TENOR_API_KEY: ${{ secrets.TENOR_API_KEY }}
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      MIN_MESSAGE_LINES: 8  # Minimum lines for valid message
      MIN_HTML_SIZE: 1024   # Minimum bytes for valid HTML

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'  # Cache dependencies for faster runs

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt --no-cache-dir

      - name: Generate AI content
        id: generate
        run: |
          echo "üîÑ Generating new message..."
          python update_message.py
          
          # Verify message quality
          if [ ! -f "message.txt" ]; then
            echo "‚ùå Error: message.txt not generated"
            exit 1
          fi
          
          lines=$(wc -l < message.txt)
          if [ "$lines" -lt "$MIN_MESSAGE_LINES" ]; then
            echo "‚ùå Error: Message too short (only $lines lines)"
            exit 1
          fi
          echo "‚úîÔ∏è Message generated with $lines lines"

      - name: Build website
        run: |
          echo "üèóÔ∏è Building HTML..."
          python build.py
          
          # Verify build output
          if [ ! -f "index.html" ]; then
            echo "‚ùå Error: index.html not generated"
            exit 1
          fi
          
          size=$(wc -c < index.html)
          if [ "$size" -lt "$MIN_HTML_SIZE" ]; then
            echo "‚ùå Error: HTML too small (only $size bytes)"
            exit 1
          fi
          echo "‚úîÔ∏è HTML built successfully (${size} bytes)"

      - name: Prepare deployment
        run: |
          echo "üì¶ Preparing deployment package..."
          mkdir -p public
          cp index.html style.css public/
          
          # Copy assets if they exist
          if [ -d "assets" ]; then
            echo "üìÅ Copying assets..."
            cp -r assets/ public/
          fi
          
          # Verify deployment package
          [ -f "public/index.html" ] || exit 1
          [ -f "public/style.css" ] || exit 1
          echo "‚úîÔ∏è Deployment package ready"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITH_TOKEN }}
          publish_dir: ./public
          force_orphan: true
          keep_files: false
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Verify deployment
        run: |
          echo "‚úÖ Deployment completed successfully"
          echo "üïí Last update: $(date)"
          echo "üìù Message preview:"
          head -n 5 message.txt