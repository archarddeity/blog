name: AI Automation

on:
  schedule:
    - cron: '*/5 * * * *'
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    env:
      TENOR_API_KEY: ${{ secrets.TENOR_API_KEY }}
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Generate content
        run: python update_message.py

      - name: Build site
        run: python build.py

      - name: Verify build
        run: |
          if grep -q "{{" index.html; then
            echo "Template tags detected!"
            exit 1
          fi

      - name: Prepare deployment
        run: |
          mkdir -p public
          cp index.html style.css public/
          [ -d assets ] && cp -r assets/ public/ || true

      - name: Deploy (Direct API)
        if: github.event_name != 'workflow_dispatch'
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"source":{"branch":"main","path":"/"}}' \
            "https://api.github.com/repos/${{ github.repository }}/pages/builds"

      - name: Deploy (Official Action)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/deploy-pages@v2

      - name: Generate OIDC token
        id: oidc-token
        uses: actions/github-script@v7
        with:
          script: |
            const token = await core.getIDToken()
            core.setOutput('token', token)
