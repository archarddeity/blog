name: AI Automation

on:
  schedule:
    - cron: '*/5 * * * *'
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    env:
      TENOR_API_KEY: ${{ secrets.TENOR_API_KEY }}
    
    steps:
      # Step 1: Clear any cached action references
      - name: Purge action cache
        run: |
          sudo rm -rf /usr/local/lib/actions-runner/_work/_actions
          sudo rm -rf /usr/local/lib/actions-runner/_work/_temp
          sudo rm -rf ~/.cache/act

      # Step 2: Checkout with fresh fetch
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get complete history

      # Step 3: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Generate content
      - name: Generate content
        run: python update_message.py

      # Step 6: Build site
      - name: Build site
        run: python build.py

      # Step 7: Verify build
      - name: Verify build
        run: |
          if grep -q "{{" index.html; then
            echo "Error: Template tags remain in index.html"
            exit 1
          fi

      # Step 8: Direct deployment without artifacts
      - name: Deploy directly to Pages
        run: |
          # Create deployment payload
          DEPLOYMENT_PAYLOAD=$(jq -n \
            --arg sha "$GITHUB_SHA" \
            --arg log_url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            '{
              "artifact_url": "",
              "pages_build": {
                "sha": $sha,
                "build_log_url": $log_url
              },
              "oidc_token": "${{ steps.oidc-token.outputs.token }}"
            }')
          
          # Trigger deployment
          curl -X POST \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/pages/builds" \
            -d "$DEPLOYMENT_PAYLOAD"

  # No separate deploy job needed since we're deploying directly